name: Backend CI - Test, Build & Push Images

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/backend_ci.yml'

env:
  # Set this repo secret to your ACR FQDN, e.g. sit722week7acr.azurecr.io
  ACR_FQDN: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}

jobs:
  # Job 1: Test & Lint (lightweight just to satisfy the brief)
  test_and_lint_backends:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          if [ -f backend/product_service/requirements.txt ]; then pip install -r backend/product_service/requirements.txt || true; fi
          if [ -f backend/order_service/requirements.txt ]; then pip install -r backend/order_service/requirements.txt || true; fi

      - name: Run flake8 lint
        run: |
          pip install flake8 || true
          flake8 backend || true

      - name: Run pytest
        run: |
          pip install pytest || true
          pytest backend || true

  # Job 2: Build & Push (runs after tests)
  build_and_push_backend:
    runs-on: ubuntu-latest
    needs: test_and_lint_backends
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Use bash to derive the short registry name from the FQDN
      - name: Login to ACR
        run: |
          REG_NAME="${{ env.ACR_FQDN }}"
          REG_NAME="${REG_NAME%%.*}"   # strip ".azurecr.io"
          echo "Using registry name: $REG_NAME (from ${{ env.ACR_FQDN }})"
          az acr login --name "$REG_NAME"

      - name: Build and Push product_service
        run: |
          docker build -t ${{ env.ACR_FQDN }}/product_service:${{ env.IMAGE_TAG }} ./backend/product_service
          docker push ${{ env.ACR_FQDN }}/product_service:${{ env.IMAGE_TAG }}
          docker tag  ${{ env.ACR_FQDN }}/product_service:${{ env.IMAGE_TAG }} ${{ env.ACR_FQDN }}/product_service:latest
          docker push ${{ env.ACR_FQDN }}/product_service:latest

      - name: Build and Push order_service
        run: |
          docker build -t ${{ env.ACR_FQDN }}/order_service:${{ env.IMAGE_TAG }} ./backend/order_service
          docker push ${{ env.ACR_FQDN }}/order_service:${{ env.IMAGE_TAG }}
          docker tag  ${{ env.ACR_FQDN }}/order_service:${{ env.IMAGE_TAG }} ${{ env.ACR_FQDN }}/order_service:latest
          docker push ${{ env.ACR_FQDN }}/order_service:latest

      - name: Logout from Azure
        if: always()
        run: az logout || true
