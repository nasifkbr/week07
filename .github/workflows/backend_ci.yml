name: Backend CI - Test, Build & Push Images

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/backend_ci.yml'

env:
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}

jobs:
  # Job 1: Test & Lint
  test_and_lint_backends:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          if [ -f backend/product_service/requirements.txt ]; then pip install -r backend/product_service/requirements.txt || true; fi
          if [ -f backend/order_service/requirements.txt ]; then pip install -r backend/order_service/requirements.txt || true; fi

      - name: Run flake8 lint
        run: |
          pip install flake8 || true
          flake8 backend || true

      - name: Run pytest
        run: |
          pip install pytest || true
          pytest backend || true

  # Job 2: Build & Push (runs after tests)
  build_and_push_backend:
    runs-on: ubuntu-latest
    needs: test_and_lint_backends
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Robust ACR detection: accepts either FQDN or short name in the secret
      - name: Resolve ACR vars and login
        env:
          ACR_INPUT: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
        run: |
          set -euo pipefail
          ACR="${ACR_INPUT:-}"
          if [ -z "$ACR" ]; then
            echo "AZURE_CONTAINER_REGISTRY secret is empty. Set it to either 'sit722week7acr' or 'sit722week7acr.azurecr.io'."
            exit 1
          fi
          if [[ "$ACR" == *.* ]]; then
            REG_NAME="${ACR%%.*}"
            ACR_FQDN="$ACR"
          else
            REG_NAME="$ACR"
            ACR_FQDN="${ACR}.azurecr.io"
          fi
          echo "Using registry name: $REG_NAME"
          az acr login --name "$REG_NAME"

          # Export for subsequent steps
          echo "REG_NAME=$REG_NAME" >> "$GITHUB_ENV"
          echo "ACR_FQDN=$ACR_FQDN" >> "$GITHUB_ENV"

      - name: Build and Push product_service
        run: |
          docker build -t "$ACR_FQDN/product_service:${IMAGE_TAG}" ./backend/product_service
          docker push "$ACR_FQDN/product_service:${IMAGE_TAG}"
          docker tag  "$ACR_FQDN/product_service:${IMAGE_TAG}" "$ACR_FQDN/product_service:latest"
          docker push "$ACR_FQDN/product_service:latest"

      - name: Build and Push order_service
        run: |
          docker build -t "$ACR_FQDN/order_service:${IMAGE_TAG}" ./backend/order_service
          docker push "$ACR_FQDN/order_service:${IMAGE_TAG}"
          docker tag  "$ACR_FQDN/order_service:${IMAGE_TAG}" "$ACR_FQDN/order_service:latest"
          docker push "$ACR_FQDN/order_service:latest"

      - name: Logout from Azure
        if: always()
        run: az logout || true
#v2
